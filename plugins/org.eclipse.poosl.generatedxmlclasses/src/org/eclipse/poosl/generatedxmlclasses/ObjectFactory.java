//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.11.16 at 11:04:04 AM CET 
//

package org.eclipse.poosl.generatedxmlclasses;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the
 * org.eclipse.poosl.generatedxmlclasses package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content.
 * The Java representation of XML content can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory methods for each of these are provided in
 * this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _PooslSpecification_QNAME = new QName("uri:poosl", "poosl_specification"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsSequenceOfExpressions_QNAME = new QName("uri:poosl", "sequence_of_expressions"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsWhile_QNAME = new QName("uri:poosl", "while"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsSwitch_QNAME = new QName("uri:poosl", "switch"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsDataMethodCall_QNAME = new QName("uri:poosl", "data_method_call"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsNew_QNAME = new QName("uri:poosl", "new"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsConstant_QNAME = new QName("uri:poosl", "constant"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsAssignment_QNAME = new QName("uri:poosl", "assignment"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsSelf_QNAME = new QName("uri:poosl", "self"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsVariable_QNAME = new QName("uri:poosl", "variable"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsIf_QNAME = new QName("uri:poosl", "if"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsBinaryOperation_QNAME = new QName("uri:poosl", "binary_operation"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsUnaryOperation_QNAME = new QName("uri:poosl", "unary_operation"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsCurrentTime_QNAME = new QName("uri:poosl", "current_time"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsReturn_QNAME = new QName("uri:poosl", "return"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExpressionsNil_QNAME = new QName("uri:poosl", "nil"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsProcessMethodCall_QNAME = new QName("uri:poosl", "process_method_call"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsSkip_QNAME = new QName("uri:poosl", "skip"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsExpression_QNAME = new QName("uri:poosl", "expression"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsSelectStatements_QNAME = new QName("uri:poosl", "select_statements"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsGuard_QNAME = new QName("uri:poosl", "guard"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsInterrupt_QNAME = new QName("uri:poosl", "interrupt"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsSequenceOfStatements_QNAME = new QName("uri:poosl", "sequence_of_statements"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsParallelStatements_QNAME = new QName("uri:poosl", "parallel_statements"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsDelay_QNAME = new QName("uri:poosl", "delay"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsAbort_QNAME = new QName("uri:poosl", "abort"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsMessageSend_QNAME = new QName("uri:poosl", "message_send"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TStatementsMessageReceive_QNAME = new QName("uri:poosl", "message_receive"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExecutiontreeMethodCall_QNAME = new QName("uri:poosl", "method_call"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExecutiontreeSelect_QNAME = new QName("uri:poosl", "select"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExecutiontreeSequential_QNAME = new QName("uri:poosl", "sequential"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExecutiontreeStatement_QNAME = new QName("uri:poosl", "statement"); //$NON-NLS-1$ //$NON-NLS-2$

    private final static QName _TExecutiontreeParallel_QNAME = new QName("uri:poosl", "parallel"); //$NON-NLS-1$ //$NON-NLS-2$

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
     * org.eclipse.poosl.generatedxmlclasses
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link TCommunicationEventParameter }
     * 
     */
    public TCommunicationEventParameter createTCommunicationEventParameter() {
        return new TCommunicationEventParameter();
    }

    /**
     * Create an instance of {@link TInspectSystem }
     * 
     */
    public TInspectSystem createTInspectSystem() {
        return new TInspectSystem();
    }

    /**
     * Create an instance of {@link TInspectCluster }
     * 
     */
    public TInspectCluster createTInspectCluster() {
        return new TInspectCluster();
    }

    /**
     * Create an instance of {@link TListFilesResponse }
     * 
     */
    public TListFilesResponse createTListFilesResponse() {
        return new TListFilesResponse();
    }

    /**
     * Create an instance of {@link Request }
     * 
     */
    public Request createRequest() {
        return new Request();
    }

    /**
     * Create an instance of {@link TLoadRequest }
     * 
     */
    public TLoadRequest createTLoadRequest() {
        return new TLoadRequest();
    }

    /**
     * Create an instance of {@link TCompileRequest }
     * 
     */
    public TCompileRequest createTCompileRequest() {
        return new TCompileRequest();
    }

    /**
     * Create an instance of {@link TListFilesRequest }
     * 
     */
    public TListFilesRequest createTListFilesRequest() {
        return new TListFilesRequest();
    }

    /**
     * Create an instance of {@link TListClassesRequest }
     * 
     */
    public TListClassesRequest createTListClassesRequest() {
        return new TListClassesRequest();
    }

    /**
     * Create an instance of {@link TGetTopLevelSpecificationRequest }
     * 
     */
    public TGetTopLevelSpecificationRequest createTGetTopLevelSpecificationRequest() {
        return new TGetTopLevelSpecificationRequest();
    }

    /**
     * Create an instance of {@link TInstantiateRequest }
     * 
     */
    public TInstantiateRequest createTInstantiateRequest() {
        return new TInstantiateRequest();
    }

    /**
     * Create an instance of {@link TCommandRequest }
     * 
     */
    public TCommandRequest createTCommandRequest() {
        return new TCommandRequest();
    }

    /**
     * Create an instance of {@link TExecutionStateRequest }
     * 
     */
    public TExecutionStateRequest createTExecutionStateRequest() {
        return new TExecutionStateRequest();
    }

    /**
     * Create an instance of {@link TGetTransitionsRequest }
     * 
     */
    public TGetTransitionsRequest createTGetTransitionsRequest() {
        return new TGetTransitionsRequest();
    }

    /**
     * Create an instance of {@link TPerformTransitionRequest }
     * 
     */
    public TPerformTransitionRequest createTPerformTransitionRequest() {
        return new TPerformTransitionRequest();
    }

    /**
     * Create an instance of {@link TPerformProcessStepRequest }
     * 
     */
    public TPerformProcessStepRequest createTPerformProcessStepRequest() {
        return new TPerformProcessStepRequest();
    }

    /**
     * Create an instance of {@link TInspectRequest }
     * 
     */
    public TInspectRequest createTInspectRequest() {
        return new TInspectRequest();
    }

    /**
     * Create an instance of {@link TCreateBreakpointRequest }
     * 
     */
    public TCreateBreakpointRequest createTCreateBreakpointRequest() {
        return new TCreateBreakpointRequest();
    }

    /**
     * Create an instance of {@link TEnableBreakpointRequest }
     * 
     */
    public TEnableBreakpointRequest createTEnableBreakpointRequest() {
        return new TEnableBreakpointRequest();
    }

    /**
     * Create an instance of {@link TDisableBreakpointRequest }
     * 
     */
    public TDisableBreakpointRequest createTDisableBreakpointRequest() {
        return new TDisableBreakpointRequest();
    }

    /**
     * Create an instance of {@link TDeleteBreakpointRequest }
     * 
     */
    public TDeleteBreakpointRequest createTDeleteBreakpointRequest() {
        return new TDeleteBreakpointRequest();
    }

    /**
     * Create an instance of {@link TSetVariableRequest }
     * 
     */
    public TSetVariableRequest createTSetVariableRequest() {
        return new TSetVariableRequest();
    }

    /**
     * Create an instance of {@link TGetPositionRequest }
     * 
     */
    public TGetPositionRequest createTGetPositionRequest() {
        return new TGetPositionRequest();
    }

    /**
     * Create an instance of {@link TEengineEventSetupRequest }
     * 
     */
    public TEengineEventSetupRequest createTEengineEventSetupRequest() {
        return new TEengineEventSetupRequest();
    }

    /**
     * Create an instance of {@link Response }
     * 
     */
    public Response createResponse() {
        return new Response();
    }

    /**
     * Create an instance of {@link TLoadResponse }
     * 
     */
    public TLoadResponse createTLoadResponse() {
        return new TLoadResponse();
    }

    /**
     * Create an instance of {@link TCompileResponse }
     * 
     */
    public TCompileResponse createTCompileResponse() {
        return new TCompileResponse();
    }

    /**
     * Create an instance of {@link TGetPositionResponse }
     * 
     */
    public TGetPositionResponse createTGetPositionResponse() {
        return new TGetPositionResponse();
    }

    /**
     * Create an instance of {@link TListClassesResponse }
     * 
     */
    public TListClassesResponse createTListClassesResponse() {
        return new TListClassesResponse();
    }

    /**
     * Create an instance of {@link TGetTopLevelSpecificationResponse }
     * 
     */
    public TGetTopLevelSpecificationResponse createTGetTopLevelSpecificationResponse() {
        return new TGetTopLevelSpecificationResponse();
    }

    /**
     * Create an instance of {@link TInstantiateResponse }
     * 
     */
    public TInstantiateResponse createTInstantiateResponse() {
        return new TInstantiateResponse();
    }

    /**
     * Create an instance of {@link TCommandResponse }
     * 
     */
    public TCommandResponse createTCommandResponse() {
        return new TCommandResponse();
    }

    /**
     * Create an instance of {@link TExecutionStateChangeResponse }
     * 
     */
    public TExecutionStateChangeResponse createTExecutionStateChangeResponse() {
        return new TExecutionStateChangeResponse();
    }

    /**
     * Create an instance of {@link TGetTransitionsResponse }
     * 
     */
    public TGetTransitionsResponse createTGetTransitionsResponse() {
        return new TGetTransitionsResponse();
    }

    /**
     * Create an instance of {@link TPerformTransitionResponse }
     * 
     */
    public TPerformTransitionResponse createTPerformTransitionResponse() {
        return new TPerformTransitionResponse();
    }

    /**
     * Create an instance of {@link TInspectResponse }
     * 
     */
    public TInspectResponse createTInspectResponse() {
        return new TInspectResponse();
    }

    /**
     * Create an instance of {@link TCreateBreakpointResponse }
     * 
     */
    public TCreateBreakpointResponse createTCreateBreakpointResponse() {
        return new TCreateBreakpointResponse();
    }

    /**
     * Create an instance of {@link TEnableBreakpointResponse }
     * 
     */
    public TEnableBreakpointResponse createTEnableBreakpointResponse() {
        return new TEnableBreakpointResponse();
    }

    /**
     * Create an instance of {@link TDisableBreakpointResponse }
     * 
     */
    public TDisableBreakpointResponse createTDisableBreakpointResponse() {
        return new TDisableBreakpointResponse();
    }

    /**
     * Create an instance of {@link TDeleteBreakpointResponse }
     * 
     */
    public TDeleteBreakpointResponse createTDeleteBreakpointResponse() {
        return new TDeleteBreakpointResponse();
    }

    /**
     * Create an instance of {@link TSetVariableResponse }
     * 
     */
    public TSetVariableResponse createTSetVariableResponse() {
        return new TSetVariableResponse();
    }

    /**
     * Create an instance of {@link TEengineEventSetupResponse }
     * 
     */
    public TEengineEventSetupResponse createTEengineEventSetupResponse() {
        return new TEengineEventSetupResponse();
    }

    /**
     * Create an instance of {@link TCommunicationEvent }
     * 
     */
    public TCommunicationEvent createTCommunicationEvent() {
        return new TCommunicationEvent();
    }

    /**
     * Create an instance of {@link TEengineEventErrorResponse }
     * 
     */
    public TEengineEventErrorResponse createTEengineEventErrorResponse() {
        return new TEengineEventErrorResponse();
    }

    /**
     * Create an instance of {@link TPooslSpecification }
     * 
     */
    public TPooslSpecification createTPooslSpecification() {
        return new TPooslSpecification();
    }

    /**
     * Create an instance of {@link TWhileStatement }
     * 
     */
    public TWhileStatement createTWhileStatement() {
        return new TWhileStatement();
    }

    /**
     * Create an instance of {@link TStatements }
     * 
     */
    public TStatements createTStatements() {
        return new TStatements();
    }

    /**
     * Create an instance of {@link TSenderInfo }
     * 
     */
    public TSenderInfo createTSenderInfo() {
        return new TSenderInfo();
    }

    /**
     * Create an instance of {@link TDelayTransition }
     * 
     */
    public TDelayTransition createTDelayTransition() {
        return new TDelayTransition();
    }

    /**
     * Create an instance of {@link TPort }
     * 
     */
    public TPort createTPort() {
        return new TPort();
    }

    /**
     * Create an instance of {@link TTransitionList }
     * 
     */
    public TTransitionList createTTransitionList() {
        return new TTransitionList();
    }

    /**
     * Create an instance of {@link TObjectCreation }
     * 
     */
    public TObjectCreation createTObjectCreation() {
        return new TObjectCreation();
    }

    /**
     * Create an instance of {@link TCurrentTime }
     * 
     */
    public TCurrentTime createTCurrentTime() {
        return new TCurrentTime();
    }

    /**
     * Create an instance of {@link TChannelInternal }
     * 
     */
    public TChannelInternal createTChannelInternal() {
        return new TChannelInternal();
    }

    /**
     * Create an instance of {@link TProcessClass }
     * 
     */
    public TProcessClass createTProcessClass() {
        return new TProcessClass();
    }

    /**
     * Create an instance of {@link TMessageReceive }
     * 
     */
    public TMessageReceive createTMessageReceive() {
        return new TMessageReceive();
    }

    /**
     * Create an instance of {@link TExecutiontreeMessageSend }
     * 
     */
    public TExecutiontreeMessageSend createTExecutiontreeMessageSend() {
        return new TExecutiontreeMessageSend();
    }

    /**
     * Create an instance of {@link TInspectVariableContext }
     * 
     */
    public TInspectVariableContext createTInspectVariableContext() {
        return new TInspectVariableContext();
    }

    /**
     * Create an instance of {@link TExpression }
     * 
     */
    public TExpression createTExpression() {
        return new TExpression();
    }

    /**
     * Create an instance of {@link TSwitchStatement }
     * 
     */
    public TSwitchStatement createTSwitchStatement() {
        return new TSwitchStatement();
    }

    /**
     * Create an instance of {@link TTopLevelSpecification }
     * 
     */
    public TTopLevelSpecification createTTopLevelSpecification() {
        return new TTopLevelSpecification();
    }

    /**
     * Create an instance of {@link THandle }
     * 
     */
    public THandle createTHandle() {
        return new THandle();
    }

    /**
     * Create an instance of {@link TSublist }
     * 
     */
    public TSublist createTSublist() {
        return new TSublist();
    }

    /**
     * Create an instance of {@link TExecutiontreeBase }
     * 
     */
    public TExecutiontreeBase createTExecutiontreeBase() {
        return new TExecutiontreeBase();
    }

    /**
     * Create an instance of {@link TChannelAnnotation }
     * 
     */
    public TChannelAnnotation createTChannelAnnotation() {
        return new TChannelAnnotation();
    }

    /**
     * Create an instance of {@link TMethod }
     * 
     */
    public TMethod createTMethod() {
        return new TMethod();
    }

    /**
     * Create an instance of {@link TDataMethod }
     * 
     */
    public TDataMethod createTDataMethod() {
        return new TDataMethod();
    }

    /**
     * Create an instance of {@link TInspectChannel }
     * 
     */
    public TInspectChannel createTInspectChannel() {
        return new TInspectChannel();
    }

    /**
     * Create an instance of {@link TSourcePosition }
     * 
     */
    public TSourcePosition createTSourcePosition() {
        return new TSourcePosition();
    }

    /**
     * Create an instance of {@link TExecutiontreeMessageReceive }
     * 
     */
    public TExecutiontreeMessageReceive createTExecutiontreeMessageReceive() {
        return new TExecutiontreeMessageReceive();
    }

    /**
     * Create an instance of {@link TSwitchCaseExpression }
     * 
     */
    public TSwitchCaseExpression createTSwitchCaseExpression() {
        return new TSwitchCaseExpression();
    }

    /**
     * Create an instance of {@link TProcessMethodCall }
     * 
     */
    public TProcessMethodCall createTProcessMethodCall() {
        return new TProcessMethodCall();
    }

    /**
     * Create an instance of {@link TMessage }
     * 
     */
    public TMessage createTMessage() {
        return new TMessage();
    }

    /**
     * Create an instance of {@link TReceiverInfo }
     * 
     */
    public TReceiverInfo createTReceiverInfo() {
        return new TReceiverInfo();
    }

    /**
     * Create an instance of {@link TDataClassAnnotation }
     * 
     */
    public TDataClassAnnotation createTDataClassAnnotation() {
        return new TDataClassAnnotation();
    }

    /**
     * Create an instance of {@link TGuard }
     * 
     */
    public TGuard createTGuard() {
        return new TGuard();
    }

    /**
     * Create an instance of {@link TDataClass }
     * 
     */
    public TDataClass createTDataClass() {
        return new TDataClass();
    }

    /**
     * Create an instance of {@link TProcessClasses }
     * 
     */
    public TProcessClasses createTProcessClasses() {
        return new TProcessClasses();
    }

    /**
     * Create an instance of {@link TClusterClassAnnotation }
     * 
     */
    public TClusterClassAnnotation createTClusterClassAnnotation() {
        return new TClusterClassAnnotation();
    }

    /**
     * Create an instance of {@link TErrorStackframe }
     * 
     */
    public TErrorStackframe createTErrorStackframe() {
        return new TErrorStackframe();
    }

    /**
     * Create an instance of {@link TAbort }
     * 
     */
    public TAbort createTAbort() {
        return new TAbort();
    }

    /**
     * Create an instance of {@link TExpressions }
     * 
     */
    public TExpressions createTExpressions() {
        return new TExpressions();
    }

    /**
     * Create an instance of {@link TDataMethodCall }
     * 
     */
    public TDataMethodCall createTDataMethodCall() {
        return new TDataMethodCall();
    }

    /**
     * Create an instance of {@link TInspectVariable }
     * 
     */
    public TInspectVariable createTInspectVariable() {
        return new TInspectVariable();
    }

    /**
     * Create an instance of {@link TBreakpoint }
     * 
     */
    public TBreakpoint createTBreakpoint() {
        return new TBreakpoint();
    }

    /**
     * Create an instance of {@link TCommunicationEventMessage }
     * 
     */
    public TCommunicationEventMessage createTCommunicationEventMessage() {
        return new TCommunicationEventMessage();
    }

    /**
     * Create an instance of {@link TProcessStepTransition }
     * 
     */
    public TProcessStepTransition createTProcessStepTransition() {
        return new TProcessStepTransition();
    }

    /**
     * Create an instance of {@link TBinaryOperation }
     * 
     */
    public TBinaryOperation createTBinaryOperation() {
        return new TBinaryOperation();
    }

    /**
     * Create an instance of {@link TUnaryOperation }
     * 
     */
    public TUnaryOperation createTUnaryOperation() {
        return new TUnaryOperation();
    }

    /**
     * Create an instance of {@link TIfExpression }
     * 
     */
    public TIfExpression createTIfExpression() {
        return new TIfExpression();
    }

    /**
     * Create an instance of {@link TAnnotation }
     * 
     */
    public TAnnotation createTAnnotation() {
        return new TAnnotation();
    }

    /**
     * Create an instance of {@link TExecutiontreeExpression }
     * 
     */
    public TExecutiontreeExpression createTExecutiontreeExpression() {
        return new TExecutiontreeExpression();
    }

    /**
     * Create an instance of {@link TInstanceAnnotation }
     * 
     */
    public TInstanceAnnotation createTInstanceAnnotation() {
        return new TInstanceAnnotation();
    }

    /**
     * Create an instance of {@link TInterrupt }
     * 
     */
    public TInterrupt createTInterrupt() {
        return new TInterrupt();
    }

    /**
     * Create an instance of {@link TInclude }
     * 
     */
    public TInclude createTInclude() {
        return new TInclude();
    }

    /**
     * Create an instance of {@link TInstantiationExpression }
     * 
     */
    public TInstantiationExpression createTInstantiationExpression() {
        return new TInstantiationExpression();
    }

    /**
     * Create an instance of {@link TVarList }
     * 
     */
    public TVarList createTVarList() {
        return new TVarList();
    }

    /**
     * Create an instance of {@link TInspectData }
     * 
     */
    public TInspectData createTInspectData() {
        return new TInspectData();
    }

    /**
     * Create an instance of {@link TProcessClassAnnotation }
     * 
     */
    public TProcessClassAnnotation createTProcessClassAnnotation() {
        return new TProcessClassAnnotation();
    }

    /**
     * Create an instance of {@link TInitialMethodCall }
     * 
     */
    public TInitialMethodCall createTInitialMethodCall() {
        return new TInitialMethodCall();
    }

    /**
     * Create an instance of {@link TWhileExpression }
     * 
     */
    public TWhileExpression createTWhileExpression() {
        return new TWhileExpression();
    }

    /**
     * Create an instance of {@link TClusterClass }
     * 
     */
    public TClusterClass createTClusterClass() {
        return new TClusterClass();
    }

    /**
     * Create an instance of {@link TExecutiontree }
     * 
     */
    public TExecutiontree createTExecutiontree() {
        return new TExecutiontree();
    }

    /**
     * Create an instance of {@link TTransition }
     * 
     */
    public TTransition createTTransition() {
        return new TTransition();
    }

    /**
     * Create an instance of {@link TBreakpointInfo }
     * 
     */
    public TBreakpointInfo createTBreakpointInfo() {
        return new TBreakpointInfo();
    }

    /**
     * Create an instance of {@link TCommuncationEventNode }
     * 
     */
    public TCommuncationEventNode createTCommuncationEventNode() {
        return new TCommuncationEventNode();
    }

    /**
     * Create an instance of {@link TExecutiontreeMethodCall }
     * 
     */
    public TExecutiontreeMethodCall createTExecutiontreeMethodCall() {
        return new TExecutiontreeMethodCall();
    }

    /**
     * Create an instance of {@link TTypedVariable }
     * 
     */
    public TTypedVariable createTTypedVariable() {
        return new TTypedVariable();
    }

    /**
     * Create an instance of {@link TChannel }
     * 
     */
    public TChannel createTChannel() {
        return new TChannel();
    }

    /**
     * Create an instance of {@link TInspectTransition }
     * 
     */
    public TInspectTransition createTInspectTransition() {
        return new TInspectTransition();
    }

    /**
     * Create an instance of {@link TConnection }
     * 
     */
    public TConnection createTConnection() {
        return new TConnection();
    }

    /**
     * Create an instance of {@link TIfStatement }
     * 
     */
    public TIfStatement createTIfStatement() {
        return new TIfStatement();
    }

    /**
     * Create an instance of {@link TPortAnnotation }
     * 
     */
    public TPortAnnotation createTPortAnnotation() {
        return new TPortAnnotation();
    }

    /**
     * Create an instance of {@link TDataClasses }
     * 
     */
    public TDataClasses createTDataClasses() {
        return new TDataClasses();
    }

    /**
     * Create an instance of {@link TInitialProcessMethodCall }
     * 
     */
    public TInitialProcessMethodCall createTInitialProcessMethodCall() {
        return new TInitialProcessMethodCall();
    }

    /**
     * Create an instance of {@link TProcessMethod }
     * 
     */
    public TProcessMethod createTProcessMethod() {
        return new TProcessMethod();
    }

    /**
     * Create an instance of {@link TClusterClasses }
     * 
     */
    public TClusterClasses createTClusterClasses() {
        return new TClusterClasses();
    }

    /**
     * Create an instance of {@link TDataStepTransition }
     * 
     */
    public TDataStepTransition createTDataStepTransition() {
        return new TDataStepTransition();
    }

    /**
     * Create an instance of {@link TStackframe }
     * 
     */
    public TStackframe createTStackframe() {
        return new TStackframe();
    }

    /**
     * Create an instance of {@link TInspectInstance }
     * 
     */
    public TInspectInstance createTInspectInstance() {
        return new TInspectInstance();
    }

    /**
     * Create an instance of {@link TInspectProcess }
     * 
     */
    public TInspectProcess createTInspectProcess() {
        return new TInspectProcess();
    }

    /**
     * Create an instance of {@link TErrorStacktrace }
     * 
     */
    public TErrorStacktrace createTErrorStacktrace() {
        return new TErrorStacktrace();
    }

    /**
     * Create an instance of {@link TInstance }
     * 
     */
    public TInstance createTInstance() {
        return new TInstance();
    }

    /**
     * Create an instance of {@link TTopLevelAnnotation }
     * 
     */
    public TTopLevelAnnotation createTTopLevelAnnotation() {
        return new TTopLevelAnnotation();
    }

    /**
     * Create an instance of {@link TSwitchCaseStatement }
     * 
     */
    public TSwitchCaseStatement createTSwitchCaseStatement() {
        return new TSwitchCaseStatement();
    }

    /**
     * Create an instance of {@link TVariableRef }
     * 
     */
    public TVariableRef createTVariableRef() {
        return new TVariableRef();
    }

    /**
     * Create an instance of {@link TInspectModel }
     * 
     */
    public TInspectModel createTInspectModel() {
        return new TInspectModel();
    }

    /**
     * Create an instance of {@link TConnectionAnnotation }
     * 
     */
    public TConnectionAnnotation createTConnectionAnnotation() {
        return new TConnectionAnnotation();
    }

    /**
     * Create an instance of {@link TClusterInterface }
     * 
     */
    public TClusterInterface createTClusterInterface() {
        return new TClusterInterface();
    }

    /**
     * Create an instance of {@link TVariable }
     * 
     */
    public TVariable createTVariable() {
        return new TVariable();
    }

    /**
     * Create an instance of {@link TInspectPort }
     * 
     */
    public TInspectPort createTInspectPort() {
        return new TInspectPort();
    }

    /**
     * Create an instance of {@link TSwitchExpression }
     * 
     */
    public TSwitchExpression createTSwitchExpression() {
        return new TSwitchExpression();
    }

    /**
     * Create an instance of {@link TConstant }
     * 
     */
    public TConstant createTConstant() {
        return new TConstant();
    }

    /**
     * Create an instance of {@link TMessageSend }
     * 
     */
    public TMessageSend createTMessageSend() {
        return new TMessageSend();
    }

    /**
     * Create an instance of {@link TPooslTypeAttribute }
     * 
     */
    public TPooslTypeAttribute createTPooslTypeAttribute() {
        return new TPooslTypeAttribute();
    }

    /**
     * Create an instance of {@link TCommunicationTransition }
     * 
     */
    public TCommunicationTransition createTCommunicationTransition() {
        return new TCommunicationTransition();
    }

    /**
     * Create an instance of {@link TErrorInfo }
     * 
     */
    public TErrorInfo createTErrorInfo() {
        return new TErrorInfo();
    }

    /**
     * Create an instance of {@link TAssignment }
     * 
     */
    public TAssignment createTAssignment() {
        return new TAssignment();
    }

    /**
     * Create an instance of {@link TEmpty }
     * 
     */
    public TEmpty createTEmpty() {
        return new TEmpty();
    }

    /**
     * Create an instance of {@link TInterface }
     * 
     */
    public TInterface createTInterface() {
        return new TInterface();
    }

    /**
     * Create an instance of {@link TStatement }
     * 
     */
    public TStatement createTStatement() {
        return new TStatement();
    }

    /**
     * Create an instance of {@link TExecutiontreeStatements }
     * 
     */
    public TExecutiontreeStatements createTExecutiontreeStatements() {
        return new TExecutiontreeStatements();
    }

    /**
     * Create an instance of {@link TCommunicationEventParameter.Parameter }
     * 
     */
    public TCommunicationEventParameter.Parameter createTCommunicationEventParameterParameter() {
        return new TCommunicationEventParameter.Parameter();
    }

    /**
     * Create an instance of {@link TInspectSystem.Channel }
     * 
     */
    public TInspectSystem.Channel createTInspectSystemChannel() {
        return new TInspectSystem.Channel();
    }

    /**
     * Create an instance of {@link TInspectCluster.Channel }
     * 
     */
    public TInspectCluster.Channel createTInspectClusterChannel() {
        return new TInspectCluster.Channel();
    }

    /**
     * Create an instance of {@link TListFilesResponse.File }
     * 
     */
    public TListFilesResponse.File createTListFilesResponseFile() {
        return new TListFilesResponse.File();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TPooslSpecification }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "poosl_specification")
    public JAXBElement<TPooslSpecification> createPooslSpecification(TPooslSpecification value) {
        return new JAXBElement<TPooslSpecification>(_PooslSpecification_QNAME, TPooslSpecification.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExpressions }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "sequence_of_expressions", scope = TExpressions.class)
    public JAXBElement<TExpressions> createTExpressionsSequenceOfExpressions(TExpressions value) {
        return new JAXBElement<TExpressions>(_TExpressionsSequenceOfExpressions_QNAME, TExpressions.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TWhileExpression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "while", scope = TExpressions.class)
    public JAXBElement<TWhileExpression> createTExpressionsWhile(TWhileExpression value) {
        return new JAXBElement<TWhileExpression>(_TExpressionsWhile_QNAME, TWhileExpression.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TSwitchExpression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "switch", scope = TExpressions.class)
    public JAXBElement<TSwitchExpression> createTExpressionsSwitch(TSwitchExpression value) {
        return new JAXBElement<TSwitchExpression>(_TExpressionsSwitch_QNAME, TSwitchExpression.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TDataMethodCall }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "data_method_call", scope = TExpressions.class)
    public JAXBElement<TDataMethodCall> createTExpressionsDataMethodCall(TDataMethodCall value) {
        return new JAXBElement<TDataMethodCall>(_TExpressionsDataMethodCall_QNAME, TDataMethodCall.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TObjectCreation }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "new", scope = TExpressions.class)
    public JAXBElement<TObjectCreation> createTExpressionsNew(TObjectCreation value) {
        return new JAXBElement<TObjectCreation>(_TExpressionsNew_QNAME, TObjectCreation.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TConstant }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "constant", scope = TExpressions.class)
    public JAXBElement<TConstant> createTExpressionsConstant(TConstant value) {
        return new JAXBElement<TConstant>(_TExpressionsConstant_QNAME, TConstant.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TAssignment }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "assignment", scope = TExpressions.class)
    public JAXBElement<TAssignment> createTExpressionsAssignment(TAssignment value) {
        return new JAXBElement<TAssignment>(_TExpressionsAssignment_QNAME, TAssignment.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TEmpty }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "self", scope = TExpressions.class)
    public JAXBElement<TEmpty> createTExpressionsSelf(TEmpty value) {
        return new JAXBElement<TEmpty>(_TExpressionsSelf_QNAME, TEmpty.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TVariableRef }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "variable", scope = TExpressions.class)
    public JAXBElement<TVariableRef> createTExpressionsVariable(TVariableRef value) {
        return new JAXBElement<TVariableRef>(_TExpressionsVariable_QNAME, TVariableRef.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TIfExpression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "if", scope = TExpressions.class)
    public JAXBElement<TIfExpression> createTExpressionsIf(TIfExpression value) {
        return new JAXBElement<TIfExpression>(_TExpressionsIf_QNAME, TIfExpression.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TBinaryOperation }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "binary_operation", scope = TExpressions.class)
    public JAXBElement<TBinaryOperation> createTExpressionsBinaryOperation(TBinaryOperation value) {
        return new JAXBElement<TBinaryOperation>(_TExpressionsBinaryOperation_QNAME, TBinaryOperation.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TUnaryOperation }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "unary_operation", scope = TExpressions.class)
    public JAXBElement<TUnaryOperation> createTExpressionsUnaryOperation(TUnaryOperation value) {
        return new JAXBElement<TUnaryOperation>(_TExpressionsUnaryOperation_QNAME, TUnaryOperation.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TCurrentTime }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "current_time", scope = TExpressions.class)
    public JAXBElement<TCurrentTime> createTExpressionsCurrentTime(TCurrentTime value) {
        return new JAXBElement<TCurrentTime>(_TExpressionsCurrentTime_QNAME, TCurrentTime.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExpression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "return", scope = TExpressions.class)
    public JAXBElement<TExpression> createTExpressionsReturn(TExpression value) {
        return new JAXBElement<TExpression>(_TExpressionsReturn_QNAME, TExpression.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TEmpty }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "nil", scope = TExpressions.class)
    public JAXBElement<TEmpty> createTExpressionsNil(TEmpty value) {
        return new JAXBElement<TEmpty>(_TExpressionsNil_QNAME, TEmpty.class, TExpressions.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TProcessMethodCall }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "process_method_call", scope = TStatements.class)
    public JAXBElement<TProcessMethodCall> createTStatementsProcessMethodCall(TProcessMethodCall value) {
        return new JAXBElement<TProcessMethodCall>(_TStatementsProcessMethodCall_QNAME, TProcessMethodCall.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TEmpty }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "skip", scope = TStatements.class)
    public JAXBElement<TEmpty> createTStatementsSkip(TEmpty value) {
        return new JAXBElement<TEmpty>(_TStatementsSkip_QNAME, TEmpty.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TWhileStatement }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "while", scope = TStatements.class)
    public JAXBElement<TWhileStatement> createTStatementsWhile(TWhileStatement value) {
        return new JAXBElement<TWhileStatement>(_TExpressionsWhile_QNAME, TWhileStatement.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TSwitchStatement }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "switch", scope = TStatements.class)
    public JAXBElement<TSwitchStatement> createTStatementsSwitch(TSwitchStatement value) {
        return new JAXBElement<TSwitchStatement>(_TExpressionsSwitch_QNAME, TSwitchStatement.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExpression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "expression", scope = TStatements.class)
    public JAXBElement<TExpression> createTStatementsExpression(TExpression value) {
        return new JAXBElement<TExpression>(_TStatementsExpression_QNAME, TExpression.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TStatements }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "select_statements", scope = TStatements.class)
    public JAXBElement<TStatements> createTStatementsSelectStatements(TStatements value) {
        return new JAXBElement<TStatements>(_TStatementsSelectStatements_QNAME, TStatements.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TGuard }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "guard", scope = TStatements.class)
    public JAXBElement<TGuard> createTStatementsGuard(TGuard value) {
        return new JAXBElement<TGuard>(_TStatementsGuard_QNAME, TGuard.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TInterrupt }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "interrupt", scope = TStatements.class)
    public JAXBElement<TInterrupt> createTStatementsInterrupt(TInterrupt value) {
        return new JAXBElement<TInterrupt>(_TStatementsInterrupt_QNAME, TInterrupt.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TIfStatement }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "if", scope = TStatements.class)
    public JAXBElement<TIfStatement> createTStatementsIf(TIfStatement value) {
        return new JAXBElement<TIfStatement>(_TExpressionsIf_QNAME, TIfStatement.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TStatements }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "sequence_of_statements", scope = TStatements.class)
    public JAXBElement<TStatements> createTStatementsSequenceOfStatements(TStatements value) {
        return new JAXBElement<TStatements>(_TStatementsSequenceOfStatements_QNAME, TStatements.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TStatements }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "parallel_statements", scope = TStatements.class)
    public JAXBElement<TStatements> createTStatementsParallelStatements(TStatements value) {
        return new JAXBElement<TStatements>(_TStatementsParallelStatements_QNAME, TStatements.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExpression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "delay", scope = TStatements.class)
    public JAXBElement<TExpression> createTStatementsDelay(TExpression value) {
        return new JAXBElement<TExpression>(_TStatementsDelay_QNAME, TExpression.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TAbort }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "abort", scope = TStatements.class)
    public JAXBElement<TAbort> createTStatementsAbort(TAbort value) {
        return new JAXBElement<TAbort>(_TStatementsAbort_QNAME, TAbort.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TMessageSend }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "message_send", scope = TStatements.class)
    public JAXBElement<TMessageSend> createTStatementsMessageSend(TMessageSend value) {
        return new JAXBElement<TMessageSend>(_TStatementsMessageSend_QNAME, TMessageSend.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TMessageReceive }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "message_receive", scope = TStatements.class)
    public JAXBElement<TMessageReceive> createTStatementsMessageReceive(TMessageReceive value) {
        return new JAXBElement<TMessageReceive>(_TStatementsMessageReceive_QNAME, TMessageReceive.class, TStatements.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeMethodCall }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "method_call", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeMethodCall> createTExecutiontreeMethodCall(TExecutiontreeMethodCall value) {
        return new JAXBElement<TExecutiontreeMethodCall>(_TExecutiontreeMethodCall_QNAME, TExecutiontreeMethodCall.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "skip", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeSkip(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TStatementsSkip_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "while", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeWhile(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsWhile_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "switch", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeSwitch(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsSwitch_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "data_method_call", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeDataMethodCall(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsDataMethodCall_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeStatements }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "select", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeStatements> createTExecutiontreeSelect(TExecutiontreeStatements value) {
        return new JAXBElement<TExecutiontreeStatements>(_TExecutiontreeSelect_QNAME, TExecutiontreeStatements.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "constant", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeConstant(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsConstant_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "guard", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeGuard(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TStatementsGuard_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeStatements }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "sequential", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeStatements> createTExecutiontreeSequential(TExecutiontreeStatements value) {
        return new JAXBElement<TExecutiontreeStatements>(_TExecutiontreeSequential_QNAME, TExecutiontreeStatements.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "statement", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeStatement(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExecutiontreeStatement_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "interrupt", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeInterrupt(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TStatementsInterrupt_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "if", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeIf(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsIf_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "unary_operation", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeUnaryOperation(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsUnaryOperation_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "current_time", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeCurrentTime(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsCurrentTime_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "nil", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeNil(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsNil_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeStatements }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "parallel", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeStatements> createTExecutiontreeParallel(TExecutiontreeStatements value) {
        return new JAXBElement<TExecutiontreeStatements>(_TExecutiontreeParallel_QNAME, TExecutiontreeStatements.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeMessageSend }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "message_send", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeMessageSend> createTExecutiontreeMessageSend(TExecutiontreeMessageSend value) {
        return new JAXBElement<TExecutiontreeMessageSend>(_TStatementsMessageSend_QNAME, TExecutiontreeMessageSend.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "process_method_call", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeProcessMethodCall(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TStatementsProcessMethodCall_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "sequence_of_expressions", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeSequenceOfExpressions(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsSequenceOfExpressions_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "new", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeNew(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsNew_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeExpression }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "expression", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeExpression> createTExecutiontreeExpression(TExecutiontreeExpression value) {
        return new JAXBElement<TExecutiontreeExpression>(_TStatementsExpression_QNAME, TExecutiontreeExpression.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "assignment", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeAssignment(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsAssignment_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "self", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeSelf(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsSelf_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "variable", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeVariable(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsVariable_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "binary_operation", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeBinaryOperation(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsBinaryOperation_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "return", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeReturn(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TExpressionsReturn_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "delay", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeDelay(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TStatementsDelay_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "abort", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeBase> createTExecutiontreeAbort(TExecutiontreeBase value) {
        return new JAXBElement<TExecutiontreeBase>(_TStatementsAbort_QNAME, TExecutiontreeBase.class, TExecutiontree.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TExecutiontreeMessageReceive }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "uri:poosl", name = "message_receive", scope = TExecutiontree.class)
    public JAXBElement<TExecutiontreeMessageReceive> createTExecutiontreeMessageReceive(TExecutiontreeMessageReceive value) {
        return new JAXBElement<TExecutiontreeMessageReceive>(_TStatementsMessageReceive_QNAME, TExecutiontreeMessageReceive.class, TExecutiontree.class, value);
    }

}
