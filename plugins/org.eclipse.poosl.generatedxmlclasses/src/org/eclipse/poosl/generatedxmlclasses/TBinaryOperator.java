//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.11.16 at 11:04:04 AM CET 
//

package org.eclipse.poosl.generatedxmlclasses;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for t_binary_operator.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * <p>
 * 
 * <pre>
 * &lt;simpleType name="t_binary_operator">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="+"/>
 *     &lt;enumeration value="-"/>
 *     &lt;enumeration value="*"/>
 *     &lt;enumeration value="/"/>
 *     &lt;enumeration value="="/>
 *     &lt;enumeration value="!="/>
 *     &lt;enumeration value="=="/>
 *     &lt;enumeration value="!=="/>
 *     &lt;enumeration value="&amp;"/>
 *     &lt;enumeration value="|"/>
 *     &lt;enumeration value="&lt;"/>
 *     &lt;enumeration value=">"/>
 *     &lt;enumeration value=">="/>
 *     &lt;enumeration value="&lt;="/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "t_binary_operator")
@XmlEnum
public enum TBinaryOperator {

    @XmlEnumValue("+")
    ADD("+"), @XmlEnumValue("-") //$NON-NLS-1$
    SUBTRACT("-"), @XmlEnumValue("*") //$NON-NLS-1$
    MULTIPLY("*"), @XmlEnumValue("/") //$NON-NLS-1$
    DIVIDE("/"), @XmlEnumValue("=") //$NON-NLS-1$
    EQUAL("="), @XmlEnumValue("!=") //$NON-NLS-1$
    UNEQUAL("!="), @XmlEnumValue("==") //$NON-NLS-1$
    IDENTICAL("=="), @XmlEnumValue("!==") //$NON-NLS-1$
    NOT_IDENTICAL("!=="), @XmlEnumValue("&") //$NON-NLS-1$
    AND("&"), @XmlEnumValue("|") //$NON-NLS-1$
    OR("|"), @XmlEnumValue("<") //$NON-NLS-1$
    LESS_THAN("<"), @XmlEnumValue(">") //$NON-NLS-1$
    GREATER_THAN(">"), @XmlEnumValue(">=") //$NON-NLS-1$
    AT_LEAST(">="), @XmlEnumValue("<=") //$NON-NLS-1$
    AT_MOST("<="); //$NON-NLS-1$

    private final String value;

    TBinaryOperator(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TBinaryOperator fromValue(String v) {
        for (TBinaryOperator c : TBinaryOperator.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
