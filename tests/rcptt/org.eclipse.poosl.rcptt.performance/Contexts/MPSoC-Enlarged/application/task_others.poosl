import "task.poosl"

@SuppressWarnings("unused")
process class Task2 extends Task
ports
	In1
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
	Out15
	Out16
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
	Out15!MappedTo(String),
	Out15!ReserveRoom(Integer),
	Out15!WriteTokens(),
	Out15?ReservationSuccessful(),
	Out16!MappedTo(String),
	Out16!ReserveRoom(Integer),
	Out16!WriteTokens(),
	Out16?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Out15!MappedTo(MapTo)
		and
			Out16!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
			case "S2" then
				skip
			case "S3" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
			case "S5" then
				skip
			case "S6" then
				skip
			case "S7" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
			case "S9" then
				skip
			case "S10" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				skip
			case "S2" then
				skip
			case "S3" then
				In1!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				skip
			case "S5" then
				skip
			case "S6" then
				skip
			case "S7" then
				In1!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				skip
			case "S9" then
				skip
			case "S10" then
				In1!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out12!ReserveRoom(1024);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(1024);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S4" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S5" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(1024);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(1024);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S8" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(1024);
				Out12?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out12!ReserveRoom(1024);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S4" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S5" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out7!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S8" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task3 extends Task
ports
	In1
	In2
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S4" then
				skip
			case "S5" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S8" then
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S4" then
				skip
			case "S5" then
				In2!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				skip
			case "S8" then
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S4" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S7" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S9" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S4" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S7" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S9" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out10!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task4 extends Task
ports
	In1
	In2
	In3
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S3" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S9" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S3" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S9" then
				In3!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				skip
			case "S6" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
			case "S8" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				skip
			case "S6" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S8" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task5 extends Task
ports
	In1
	In2
	In3
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
	Out15
	Out16
	Out17
	Out18
	Out19
	Out20
	Out21
	Out22
	Out23
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
	Out15!MappedTo(String),
	Out15!ReserveRoom(Integer),
	Out15!WriteTokens(),
	Out15?ReservationSuccessful(),
	Out16!MappedTo(String),
	Out16!ReserveRoom(Integer),
	Out16!WriteTokens(),
	Out16?ReservationSuccessful(),
	Out17!MappedTo(String),
	Out17!ReserveRoom(Integer),
	Out17!WriteTokens(),
	Out17?ReservationSuccessful(),
	Out18!MappedTo(String),
	Out18!ReserveRoom(Integer),
	Out18!WriteTokens(),
	Out18?ReservationSuccessful(),
	Out19!MappedTo(String),
	Out19!ReserveRoom(Integer),
	Out19!WriteTokens(),
	Out19?ReservationSuccessful(),
	Out20!MappedTo(String),
	Out20!ReserveRoom(Integer),
	Out20!WriteTokens(),
	Out20?ReservationSuccessful(),
	Out21!MappedTo(String),
	Out21!ReserveRoom(Integer),
	Out21!WriteTokens(),
	Out21?ReservationSuccessful(),
	Out22!MappedTo(String),
	Out22!ReserveRoom(Integer),
	Out22!WriteTokens(),
	Out22?ReservationSuccessful(),
	Out23!MappedTo(String),
	Out23!ReserveRoom(Integer),
	Out23!WriteTokens(),
	Out23?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Out15!MappedTo(MapTo)
		and
			Out16!MappedTo(MapTo)
		and
			Out17!MappedTo(MapTo)
		and
			Out18!MappedTo(MapTo)
		and
			Out19!MappedTo(MapTo)
		and
			Out20!MappedTo(MapTo)
		and
			Out21!MappedTo(MapTo)
		and
			Out22!MappedTo(MapTo)
		and
			Out23!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S2" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S6" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S2" then
				In3!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S6" then
				In3!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out18!ReserveRoom(2048);
				Out18?ReservationSuccessful;
				Out21!ReserveRoom(4096);
				Out21?ReservationSuccessful;
				Out22!ReserveRoom(2048);
				Out22?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(2048);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(4096);
				Out20?ReservationSuccessful;
				Out21!ReserveRoom(4096);
				Out21?ReservationSuccessful;
				Out22!ReserveRoom(2048);
				Out22?ReservationSuccessful;
				skip
			case "S4" then
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(2048);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out22!ReserveRoom(2048);
				Out22?ReservationSuccessful;
				Out23!ReserveRoom(4096);
				Out23?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(4096);
				Out20?ReservationSuccessful;
				Out23!ReserveRoom(4096);
				Out23?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out21!ReserveRoom(4096);
				Out21?ReservationSuccessful;
				skip
			case "S7" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(2048);
				Out18?ReservationSuccessful;
				Out20!ReserveRoom(4096);
				Out20?ReservationSuccessful;
				Out23!ReserveRoom(4096);
				Out23?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(2048);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out21!ReserveRoom(4096);
				Out21?ReservationSuccessful;
				Out23!ReserveRoom(4096);
				Out23?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out22!ReserveRoom(2048);
				Out22?ReservationSuccessful;
				Out23!ReserveRoom(4096);
				Out23?ReservationSuccessful;
				skip
			case "S10" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out17!ReserveRoom(1024);
				Out17?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(4096);
				Out20?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out17!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out18!WriteTokens;
				Out21!WriteTokens;
				Out22!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				Out21!WriteTokens;
				Out22!WriteTokens;
				skip
			case "S4" then
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out22!WriteTokens;
				Out23!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				Out23!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out19!WriteTokens;
				Out21!WriteTokens;
				skip
			case "S7" then
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out20!WriteTokens;
				Out23!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out11!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out21!WriteTokens;
				Out23!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out19!WriteTokens;
				Out22!WriteTokens;
				Out23!WriteTokens;
				skip
			case "S10" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out17!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task6 extends Task
ports
	In1
	In2
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
	Out15
	Out16
	Out17
	Out18
	Out19
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
	Out15!MappedTo(String),
	Out15!ReserveRoom(Integer),
	Out15!WriteTokens(),
	Out15?ReservationSuccessful(),
	Out16!MappedTo(String),
	Out16!ReserveRoom(Integer),
	Out16!WriteTokens(),
	Out16?ReservationSuccessful(),
	Out17!MappedTo(String),
	Out17!ReserveRoom(Integer),
	Out17!WriteTokens(),
	Out17?ReservationSuccessful(),
	Out18!MappedTo(String),
	Out18!ReserveRoom(Integer),
	Out18!WriteTokens(),
	Out18?ReservationSuccessful(),
	Out19!MappedTo(String),
	Out19!ReserveRoom(Integer),
	Out19!WriteTokens(),
	Out19?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Out15!MappedTo(MapTo)
		and
			Out16!MappedTo(MapTo)
		and
			Out17!MappedTo(MapTo)
		and
			Out18!MappedTo(MapTo)
		and
			Out19!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S4" then
				skip
			case "S5" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S7" then
				skip
			case "S8" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S4" then
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S7" then
				skip
			case "S8" then
				In2!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
			case "S2" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				skip
			case "S4" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				skip
			case "S7" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(2048);
				Out14?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out13!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S2" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				skip
			case "S4" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out17!WriteTokens;
				skip
			case "S7" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out16!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task7 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S4" then
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S6" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S9" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S4" then
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S6" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S9" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				skip
			case "S3" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				skip
			case "S4" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				skip
			case "S5" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				skip
			case "S6" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				skip
			case "S7" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(1024);
				Out10?ReservationSuccessful;
				Out13!ReserveRoom(4096);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S3" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S4" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S5" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S6" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S7" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task8 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S3" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S4" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S5" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				skip
			case "S7" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S3" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S4" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S5" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S7" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S4" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S6" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S4" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S6" then
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task9 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				skip
			case "S5" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S5" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				skip
			case "S3" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S6" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				skip
			case "S7" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(1024);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				skip
			case "S10" then
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S3" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S6" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S7" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				skip
			case "S10" then
				Out4!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task10 extends Task
ports
	In1
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
	Out15
	Out16
	Out17
	Out18
	Out19
	Out20
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
	Out15!MappedTo(String),
	Out15!ReserveRoom(Integer),
	Out15!WriteTokens(),
	Out15?ReservationSuccessful(),
	Out16!MappedTo(String),
	Out16!ReserveRoom(Integer),
	Out16!WriteTokens(),
	Out16?ReservationSuccessful(),
	Out17!MappedTo(String),
	Out17!ReserveRoom(Integer),
	Out17!WriteTokens(),
	Out17?ReservationSuccessful(),
	Out18!MappedTo(String),
	Out18!ReserveRoom(Integer),
	Out18!WriteTokens(),
	Out18?ReservationSuccessful(),
	Out19!MappedTo(String),
	Out19!ReserveRoom(Integer),
	Out19!WriteTokens(),
	Out19?ReservationSuccessful(),
	Out20!MappedTo(String),
	Out20!ReserveRoom(Integer),
	Out20!WriteTokens(),
	Out20?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Out15!MappedTo(MapTo)
		and
			Out16!MappedTo(MapTo)
		and
			Out17!MappedTo(MapTo)
		and
			Out18!MappedTo(MapTo)
		and
			Out19!MappedTo(MapTo)
		and
			Out20!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S3" then
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S5" then
				skip
			case "S6" then
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S10" then
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				skip
			case "S3" then
				skip
			case "S4" then
				In1!ReleaseRoom;
				skip
			case "S5" then
				skip
			case "S6" then
				skip
			case "S7" then
				In1!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				skip
			case "S10" then
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(4096);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out18!ReserveRoom(4096);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out18!ReserveRoom(4096);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(4096);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(4096);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S9" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out18!ReserveRoom(4096);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S10" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(4096);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out19!ReserveRoom(1024);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out17!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out15!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S9" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S10" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task11 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
	Out15
	Out16
	Out17
	Out18
	Out19
	Out20
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
	Out15!MappedTo(String),
	Out15!ReserveRoom(Integer),
	Out15!WriteTokens(),
	Out15?ReservationSuccessful(),
	Out16!MappedTo(String),
	Out16!ReserveRoom(Integer),
	Out16!WriteTokens(),
	Out16?ReservationSuccessful(),
	Out17!MappedTo(String),
	Out17!ReserveRoom(Integer),
	Out17!WriteTokens(),
	Out17?ReservationSuccessful(),
	Out18!MappedTo(String),
	Out18!ReserveRoom(Integer),
	Out18!WriteTokens(),
	Out18?ReservationSuccessful(),
	Out19!MappedTo(String),
	Out19!ReserveRoom(Integer),
	Out19!WriteTokens(),
	Out19?ReservationSuccessful(),
	Out20!MappedTo(String),
	Out20!ReserveRoom(Integer),
	Out20!WriteTokens(),
	Out20?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Out15!MappedTo(MapTo)
		and
			Out16!MappedTo(MapTo)
		and
			Out17!MappedTo(MapTo)
		and
			Out18!MappedTo(MapTo)
		and
			Out19!MappedTo(MapTo)
		and
			Out20!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				skip
			case "S3" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				skip
			case "S4" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				skip
			case "S8" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S3" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S4" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S8" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				skip
			case "S5" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(1024);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out19!ReserveRoom(2048);
				Out19?ReservationSuccessful;
				skip
			case "S10" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(2048);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				Out17!ReserveRoom(4096);
				Out17?ReservationSuccessful;
				Out18!ReserveRoom(1024);
				Out18?ReservationSuccessful;
				Out20!ReserveRoom(1024);
				Out20?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				Out18!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				skip
			case "S5" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				Out20!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out18!WriteTokens;
				Out19!WriteTokens;
				skip
			case "S10" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				Out17!WriteTokens;
				Out18!WriteTokens;
				Out20!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task12 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
	Out15
	Out16
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
	Out15!MappedTo(String),
	Out15!ReserveRoom(Integer),
	Out15!WriteTokens(),
	Out15?ReservationSuccessful(),
	Out16!MappedTo(String),
	Out16!ReserveRoom(Integer),
	Out16!WriteTokens(),
	Out16?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Out15!MappedTo(MapTo)
		and
			Out16!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S2" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S5" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S6" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S7" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S8" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S10" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S2" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S5" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S6" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S7" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S8" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S10" then
				In3!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				skip
			case "S3" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S5" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(4096);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(1024);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(1024);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(2048);
				Out10?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out15!ReserveRoom(1024);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(2048);
				Out16?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out15!WriteTokens;
				skip
			case "S3" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S5" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out12!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out7!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out12!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task13 extends Task
ports
	In1
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				skip
			case "S2" then
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				skip
			case "S2" then
				skip
			case "S3" then
				In1!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
			case "S9" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				skip
			case "S10" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(2048);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(2048);
				Out9?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S9" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				skip
			case "S10" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task14 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S9" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S9" then
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S9" then
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S9" then
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task15 extends Task
ports
	In1
	In2
	In3
	Out1
	Out2
	Out3
	Out4
	Out5
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S4" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S5" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S4" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S5" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				skip
			case "S7" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S7" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task16 extends Task
ports
	In1
	In2
	In3
	In4
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S2" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S3" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S2" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S3" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S3" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S5" then
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S6" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S10" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S3" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S5" then
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S6" then
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S10" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task17 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				skip
			case "S2" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S3" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S5" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S2" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S3" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S5" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S10" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S10" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task18 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S3" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S5" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S3" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S5" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S3" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				skip
			case "S10" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S3" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S10" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task19 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	Out1
	Out2
	Out3
	Out4
	Out5
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S2" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S9" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				skip
			case "S10" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S2" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S9" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				skip
			case "S10" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				skip
			case "S4" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				skip
			case "S6" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S9" then
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S10" then
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				skip
			case "S4" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S6" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S9" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S10" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task20 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S3" then
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S5" then
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				skip
			case "S7" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S3" then
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S5" then
				In4!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S7" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S2" then
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S3" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				skip
			case "S6" then
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
			case "S10" then
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(1024);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(2048);
				Out8?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out2!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S2" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S3" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S6" then
				Out4!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S10" then
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task21 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S3" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S7" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S8" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S3" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S7" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S8" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				skip
			case "S4" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				skip
			case "S5" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
			case "S6" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(2048);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				skip
			case "S4" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S5" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S6" then
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task22 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
	Out7
	Out8
	Out9
	Out10
	Out11
	Out12
	Out13
	Out14
	Out15
	Out16
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
	Out7!MappedTo(String),
	Out7!ReserveRoom(Integer),
	Out7!WriteTokens(),
	Out7?ReservationSuccessful(),
	Out8!MappedTo(String),
	Out8!ReserveRoom(Integer),
	Out8!WriteTokens(),
	Out8?ReservationSuccessful(),
	Out9!MappedTo(String),
	Out9!ReserveRoom(Integer),
	Out9!WriteTokens(),
	Out9?ReservationSuccessful(),
	Out10!MappedTo(String),
	Out10!ReserveRoom(Integer),
	Out10!WriteTokens(),
	Out10?ReservationSuccessful(),
	Out11!MappedTo(String),
	Out11!ReserveRoom(Integer),
	Out11!WriteTokens(),
	Out11?ReservationSuccessful(),
	Out12!MappedTo(String),
	Out12!ReserveRoom(Integer),
	Out12!WriteTokens(),
	Out12?ReservationSuccessful(),
	Out13!MappedTo(String),
	Out13!ReserveRoom(Integer),
	Out13!WriteTokens(),
	Out13?ReservationSuccessful(),
	Out14!MappedTo(String),
	Out14!ReserveRoom(Integer),
	Out14!WriteTokens(),
	Out14?ReservationSuccessful(),
	Out15!MappedTo(String),
	Out15!ReserveRoom(Integer),
	Out15!WriteTokens(),
	Out15?ReservationSuccessful(),
	Out16!MappedTo(String),
	Out16!ReserveRoom(Integer),
	Out16!WriteTokens(),
	Out16?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Out7!MappedTo(MapTo)
		and
			Out8!MappedTo(MapTo)
		and
			Out9!MappedTo(MapTo)
		and
			Out10!MappedTo(MapTo)
		and
			Out11!MappedTo(MapTo)
		and
			Out12!MappedTo(MapTo)
		and
			Out13!MappedTo(MapTo)
		and
			Out14!MappedTo(MapTo)
		and
			Out15!MappedTo(MapTo)
		and
			Out16!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				skip
			case "S3" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				skip
			case "S4" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				skip
			case "S5" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S3" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S4" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S5" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				skip
			case "S9" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				skip
			case "S10" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(4096);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(1024);
				Out6?ReservationSuccessful;
				Out7!ReserveRoom(4096);
				Out7?ReservationSuccessful;
				Out8!ReserveRoom(4096);
				Out8?ReservationSuccessful;
				Out9!ReserveRoom(4096);
				Out9?ReservationSuccessful;
				Out10!ReserveRoom(4096);
				Out10?ReservationSuccessful;
				Out11!ReserveRoom(1024);
				Out11?ReservationSuccessful;
				Out12!ReserveRoom(2048);
				Out12?ReservationSuccessful;
				Out13!ReserveRoom(2048);
				Out13?ReservationSuccessful;
				Out14!ReserveRoom(4096);
				Out14?ReservationSuccessful;
				Out15!ReserveRoom(4096);
				Out15?ReservationSuccessful;
				Out16!ReserveRoom(4096);
				Out16?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out14!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out11!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S9" then
				Out3!WriteTokens;
				Out5!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
			case "S10" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				Out7!WriteTokens;
				Out8!WriteTokens;
				Out9!WriteTokens;
				Out10!WriteTokens;
				Out11!WriteTokens;
				Out12!WriteTokens;
				Out13!WriteTokens;
				Out14!WriteTokens;
				Out15!WriteTokens;
				Out16!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task23 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	In16
	In17
	In18
	In19
	In20
	In21
	In22
	Out1
	Out2
	Out3
	Out4
	Out5
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	In16!InspectTokenAvailability(Integer),
	In16!MappedTo(String),
	In16!ReleaseRoom(),
	In16?TokensAvailable(),
	In17!InspectTokenAvailability(Integer),
	In17!MappedTo(String),
	In17!ReleaseRoom(),
	In17?TokensAvailable(),
	In18!InspectTokenAvailability(Integer),
	In18!MappedTo(String),
	In18!ReleaseRoom(),
	In18?TokensAvailable(),
	In19!InspectTokenAvailability(Integer),
	In19!MappedTo(String),
	In19!ReleaseRoom(),
	In19?TokensAvailable(),
	In20!InspectTokenAvailability(Integer),
	In20!MappedTo(String),
	In20!ReleaseRoom(),
	In20?TokensAvailable(),
	In21!InspectTokenAvailability(Integer),
	In21!MappedTo(String),
	In21!ReleaseRoom(),
	In21?TokensAvailable(),
	In22!InspectTokenAvailability(Integer),
	In22!MappedTo(String),
	In22!ReleaseRoom(),
	In22?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			In16!MappedTo(MapTo)
		and
			In17!MappedTo(MapTo)
		and
			In18!MappedTo(MapTo)
		and
			In19!MappedTo(MapTo)
		and
			In20!MappedTo(MapTo)
		and
			In21!MappedTo(MapTo)
		and
			In22!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(2048);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(2048);
				In20?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(2048);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(2048);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(4096);
				In17?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In19!InspectTokenAvailability(2048);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(2048);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(4096);
				In17?TokensAvailable;
				In19!InspectTokenAvailability(2048);
				In19?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In17!InspectTokenAvailability(4096);
				In17?TokensAvailable;
				In19!InspectTokenAvailability(2048);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(2048);
				In20?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In20!InspectTokenAvailability(2048);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S8" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In20!InspectTokenAvailability(2048);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				skip
			case "S9" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(4096);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(2048);
				In19?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In20!InspectTokenAvailability(2048);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In21!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In19!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				In15!ReleaseRoom;
				In17!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In18!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S8" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In18!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				skip
			case "S9" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In18!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S4" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S10" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(2048);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S4" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S10" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task24 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	Out1
	Out2
	Out3
	Out4
	Out5
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(4096);
				In15?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(4096);
				In15?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(4096);
				In15?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(4096);
				In15?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(4096);
				In15?TokensAvailable;
				skip
			case "S7" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(4096);
				In15?TokensAvailable;
				skip
			case "S8" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In15!InspectTokenAvailability(4096);
				In15?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S7" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S8" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S9" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(1024);
				Out5?ReservationSuccessful;
				skip
			case "S10" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S9" then
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S10" then
				Out3!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task25 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	In16
	In17
	In18
	In19
	In20
	In21
	In22
	In23
	Out1
	Out2
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	In16!InspectTokenAvailability(Integer),
	In16!MappedTo(String),
	In16!ReleaseRoom(),
	In16?TokensAvailable(),
	In17!InspectTokenAvailability(Integer),
	In17!MappedTo(String),
	In17!ReleaseRoom(),
	In17?TokensAvailable(),
	In18!InspectTokenAvailability(Integer),
	In18!MappedTo(String),
	In18!ReleaseRoom(),
	In18?TokensAvailable(),
	In19!InspectTokenAvailability(Integer),
	In19!MappedTo(String),
	In19!ReleaseRoom(),
	In19?TokensAvailable(),
	In20!InspectTokenAvailability(Integer),
	In20!MappedTo(String),
	In20!ReleaseRoom(),
	In20?TokensAvailable(),
	In21!InspectTokenAvailability(Integer),
	In21!MappedTo(String),
	In21!ReleaseRoom(),
	In21?TokensAvailable(),
	In22!InspectTokenAvailability(Integer),
	In22!MappedTo(String),
	In22!ReleaseRoom(),
	In22?TokensAvailable(),
	In23!InspectTokenAvailability(Integer),
	In23!MappedTo(String),
	In23!ReleaseRoom(),
	In23?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			In16!MappedTo(MapTo)
		and
			In17!MappedTo(MapTo)
		and
			In18!MappedTo(MapTo)
		and
			In19!MappedTo(MapTo)
		and
			In20!MappedTo(MapTo)
		and
			In21!MappedTo(MapTo)
		and
			In22!MappedTo(MapTo)
		and
			In23!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In23!InspectTokenAvailability(2048);
				In23?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(2048);
				In23?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In23!InspectTokenAvailability(2048);
				In23?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(2048);
				In23?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(1024);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In23!InspectTokenAvailability(2048);
				In23?TokensAvailable;
				skip
			case "S9" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(2048);
				In9?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(2048);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In17!ReleaseRoom;
				In19!ReleaseRoom;
				In21!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In18!ReleaseRoom;
				In21!ReleaseRoom;
				In23!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In23!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In21!ReleaseRoom;
				In23!ReleaseRoom;
				skip
			case "S9" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In17!ReleaseRoom;
				In21!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S4" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S5" then
				skip
			case "S6" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				skip
			case "S9" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S10" then
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S4" then
				Out2!WriteTokens;
				skip
			case "S5" then
				skip
			case "S6" then
				Out1!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				skip
			case "S9" then
				Out2!WriteTokens;
				skip
			case "S10" then
				skip
		od

@SuppressWarnings("unused")
process class Task26 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	In16
	Out1
	Out2
	Out3
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	In16!InspectTokenAvailability(Integer),
	In16!MappedTo(String),
	In16!ReleaseRoom(),
	In16?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			In16!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In12!InspectTokenAvailability(1024);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(1024);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(1024);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				skip
			case "S8" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(1024);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S9" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In12!InspectTokenAvailability(1024);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				skip
			case "S8" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S9" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
			case "S4" then
				skip
			case "S5" then
				skip
			case "S6" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(1024);
				Out3?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S4" then
				skip
			case "S5" then
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task27 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	In16
	Out1
	Out2
	Out3
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	In16!InspectTokenAvailability(Integer),
	In16!MappedTo(String),
	In16!ReleaseRoom(),
	In16?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			In16!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(2048);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(2048);
				In16?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In11!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S4" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S4" then
				Out3!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task28 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	Out1
	Out2
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				skip
			case "S3" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S8" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(2048);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(1024);
				In6?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In7!InspectTokenAvailability(2048);
				In7?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S3" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S8" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In7!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				skip
			case "S2" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S4" then
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S6" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S8" then
				skip
			case "S9" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				skip
			case "S2" then
				Out2!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S4" then
				skip
			case "S5" then
				Out1!WriteTokens;
				skip
			case "S6" then
				Out2!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				skip
			case "S8" then
				skip
			case "S9" then
				Out2!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task29 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	Out1
	Out2
	Out3
	Out4
	Out5
	Out6
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
	Out5!MappedTo(String),
	Out5!ReserveRoom(Integer),
	Out5!WriteTokens(),
	Out5?ReservationSuccessful(),
	Out6!MappedTo(String),
	Out6!ReserveRoom(Integer),
	Out6!WriteTokens(),
	Out6?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Out5!MappedTo(MapTo)
		and
			Out6!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				skip
			case "S3" then
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(4096);
				Out4?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				Out6!ReserveRoom(4096);
				Out6?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(4096);
				Out3?ReservationSuccessful;
				Out5!ReserveRoom(2048);
				Out5?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S3" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				Out5!WriteTokens;
				Out6!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out5!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task30 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	In16
	Out1
	Out2
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	In16!InspectTokenAvailability(Integer),
	In16!MappedTo(String),
	In16!ReleaseRoom(),
	In16?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			In16!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S2" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				skip
			case "S4" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S8" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
			case "S9" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(2048);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(1024);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(4096);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(2048);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(1024);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(4096);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(2048);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(2048);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S2" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				skip
			case "S4" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S8" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
			case "S9" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S3" then
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S5" then
				skip
			case "S6" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S8" then
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(2048);
				Out2?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				skip
			case "S3" then
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S5" then
				skip
			case "S6" then
				Out2!WriteTokens;
				skip
			case "S7" then
				Out1!WriteTokens;
				skip
			case "S8" then
				Out2!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task31 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	In16
	In17
	In18
	In19
	In20
	In21
	In22
	Out1
	Out2
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	In16!InspectTokenAvailability(Integer),
	In16!MappedTo(String),
	In16!ReleaseRoom(),
	In16?TokensAvailable(),
	In17!InspectTokenAvailability(Integer),
	In17!MappedTo(String),
	In17!ReleaseRoom(),
	In17?TokensAvailable(),
	In18!InspectTokenAvailability(Integer),
	In18!MappedTo(String),
	In18!ReleaseRoom(),
	In18?TokensAvailable(),
	In19!InspectTokenAvailability(Integer),
	In19!MappedTo(String),
	In19!ReleaseRoom(),
	In19?TokensAvailable(),
	In20!InspectTokenAvailability(Integer),
	In20!MappedTo(String),
	In20!ReleaseRoom(),
	In20?TokensAvailable(),
	In21!InspectTokenAvailability(Integer),
	In21!MappedTo(String),
	In21!ReleaseRoom(),
	In21?TokensAvailable(),
	In22!InspectTokenAvailability(Integer),
	In22!MappedTo(String),
	In22!ReleaseRoom(),
	In22?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			In16!MappedTo(MapTo)
		and
			In17!MappedTo(MapTo)
		and
			In18!MappedTo(MapTo)
		and
			In19!MappedTo(MapTo)
		and
			In20!MappedTo(MapTo)
		and
			In21!MappedTo(MapTo)
		and
			In22!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S2" then
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(1024);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(1024);
				In18?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In18!InspectTokenAvailability(1024);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S8" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In19!InspectTokenAvailability(4096);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(4096);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(4096);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
			case "S10" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(4096);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(4096);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(4096);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(2048);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(1024);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(4096);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In18!InspectTokenAvailability(1024);
				In18?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In22!InspectTokenAvailability(4096);
				In22?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S2" then
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In20!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S8" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				skip
			case "S10" then
				In1!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In18!ReleaseRoom;
				In20!ReleaseRoom;
				In22!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				skip
			case "S4" then
				skip
			case "S5" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				skip
			case "S6" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S7" then
				skip
			case "S8" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				skip
			case "S9" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(4096);
				Out2?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(2048);
				Out1?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				skip
			case "S4" then
				skip
			case "S5" then
				Out1!WriteTokens;
				skip
			case "S6" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S7" then
				skip
			case "S8" then
				Out1!WriteTokens;
				skip
			case "S9" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task32 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	In7
	In8
	In9
	In10
	In11
	In12
	In13
	In14
	In15
	In16
	In17
	In18
	In19
	In20
	In21
	In22
	In23
	In24
	In25
	In26
	In27
	In28
	In29
	Out1
	Out2
	Out3
	Out4
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	In7!InspectTokenAvailability(Integer),
	In7!MappedTo(String),
	In7!ReleaseRoom(),
	In7?TokensAvailable(),
	In8!InspectTokenAvailability(Integer),
	In8!MappedTo(String),
	In8!ReleaseRoom(),
	In8?TokensAvailable(),
	In9!InspectTokenAvailability(Integer),
	In9!MappedTo(String),
	In9!ReleaseRoom(),
	In9?TokensAvailable(),
	In10!InspectTokenAvailability(Integer),
	In10!MappedTo(String),
	In10!ReleaseRoom(),
	In10?TokensAvailable(),
	In11!InspectTokenAvailability(Integer),
	In11!MappedTo(String),
	In11!ReleaseRoom(),
	In11?TokensAvailable(),
	In12!InspectTokenAvailability(Integer),
	In12!MappedTo(String),
	In12!ReleaseRoom(),
	In12?TokensAvailable(),
	In13!InspectTokenAvailability(Integer),
	In13!MappedTo(String),
	In13!ReleaseRoom(),
	In13?TokensAvailable(),
	In14!InspectTokenAvailability(Integer),
	In14!MappedTo(String),
	In14!ReleaseRoom(),
	In14?TokensAvailable(),
	In15!InspectTokenAvailability(Integer),
	In15!MappedTo(String),
	In15!ReleaseRoom(),
	In15?TokensAvailable(),
	In16!InspectTokenAvailability(Integer),
	In16!MappedTo(String),
	In16!ReleaseRoom(),
	In16?TokensAvailable(),
	In17!InspectTokenAvailability(Integer),
	In17!MappedTo(String),
	In17!ReleaseRoom(),
	In17?TokensAvailable(),
	In18!InspectTokenAvailability(Integer),
	In18!MappedTo(String),
	In18!ReleaseRoom(),
	In18?TokensAvailable(),
	In19!InspectTokenAvailability(Integer),
	In19!MappedTo(String),
	In19!ReleaseRoom(),
	In19?TokensAvailable(),
	In20!InspectTokenAvailability(Integer),
	In20!MappedTo(String),
	In20!ReleaseRoom(),
	In20?TokensAvailable(),
	In21!InspectTokenAvailability(Integer),
	In21!MappedTo(String),
	In21!ReleaseRoom(),
	In21?TokensAvailable(),
	In22!InspectTokenAvailability(Integer),
	In22!MappedTo(String),
	In22!ReleaseRoom(),
	In22?TokensAvailable(),
	In23!InspectTokenAvailability(Integer),
	In23!MappedTo(String),
	In23!ReleaseRoom(),
	In23?TokensAvailable(),
	In24!InspectTokenAvailability(Integer),
	In24!MappedTo(String),
	In24!ReleaseRoom(),
	In24?TokensAvailable(),
	In25!InspectTokenAvailability(Integer),
	In25!MappedTo(String),
	In25!ReleaseRoom(),
	In25?TokensAvailable(),
	In26!InspectTokenAvailability(Integer),
	In26!MappedTo(String),
	In26!ReleaseRoom(),
	In26?TokensAvailable(),
	In27!InspectTokenAvailability(Integer),
	In27!MappedTo(String),
	In27!ReleaseRoom(),
	In27?TokensAvailable(),
	In28!InspectTokenAvailability(Integer),
	In28!MappedTo(String),
	In28!ReleaseRoom(),
	In28?TokensAvailable(),
	In29!InspectTokenAvailability(Integer),
	In29!MappedTo(String),
	In29!ReleaseRoom(),
	In29?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
	Out2!MappedTo(String),
	Out2!ReserveRoom(Integer),
	Out2!WriteTokens(),
	Out2?ReservationSuccessful(),
	Out3!MappedTo(String),
	Out3!ReserveRoom(Integer),
	Out3!WriteTokens(),
	Out3?ReservationSuccessful(),
	Out4!MappedTo(String),
	Out4!ReserveRoom(Integer),
	Out4!WriteTokens(),
	Out4?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			In7!MappedTo(MapTo)
		and
			In8!MappedTo(MapTo)
		and
			In9!MappedTo(MapTo)
		and
			In10!MappedTo(MapTo)
		and
			In11!MappedTo(MapTo)
		and
			In12!MappedTo(MapTo)
		and
			In13!MappedTo(MapTo)
		and
			In14!MappedTo(MapTo)
		and
			In15!MappedTo(MapTo)
		and
			In16!MappedTo(MapTo)
		and
			In17!MappedTo(MapTo)
		and
			In18!MappedTo(MapTo)
		and
			In19!MappedTo(MapTo)
		and
			In20!MappedTo(MapTo)
		and
			In21!MappedTo(MapTo)
		and
			In22!MappedTo(MapTo)
		and
			In23!MappedTo(MapTo)
		and
			In24!MappedTo(MapTo)
		and
			In25!MappedTo(MapTo)
		and
			In26!MappedTo(MapTo)
		and
			In27!MappedTo(MapTo)
		and
			In28!MappedTo(MapTo)
		and
			In29!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Out2!MappedTo(MapTo)
		and
			Out3!MappedTo(MapTo)
		and
			Out4!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(1024);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(2048);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In26!InspectTokenAvailability(4096);
				In26?TokensAvailable;
				In27!InspectTokenAvailability(2048);
				In27?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In26!InspectTokenAvailability(4096);
				In26?TokensAvailable;
				In27!InspectTokenAvailability(2048);
				In27?TokensAvailable;
				In28!InspectTokenAvailability(2048);
				In28?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
			case "S3" then
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(2048);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In24!InspectTokenAvailability(4096);
				In24?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In26!InspectTokenAvailability(4096);
				In26?TokensAvailable;
				In28!InspectTokenAvailability(2048);
				In28?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(1024);
				In10?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(2048);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In24!InspectTokenAvailability(4096);
				In24?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In26!InspectTokenAvailability(4096);
				In26?TokensAvailable;
				In27!InspectTokenAvailability(2048);
				In27?TokensAvailable;
				In28!InspectTokenAvailability(2048);
				In28?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(1024);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(2048);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In24!InspectTokenAvailability(4096);
				In24?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(1024);
				In10?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In26!InspectTokenAvailability(4096);
				In26?TokensAvailable;
				In27!InspectTokenAvailability(2048);
				In27?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(1024);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(1024);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(2048);
				In14?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In24!InspectTokenAvailability(4096);
				In24?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In27!InspectTokenAvailability(2048);
				In27?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
			case "S9" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(2048);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In8!InspectTokenAvailability(4096);
				In8?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In12!InspectTokenAvailability(4096);
				In12?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(2048);
				In14?TokensAvailable;
				In15!InspectTokenAvailability(1024);
				In15?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In19!InspectTokenAvailability(1024);
				In19?TokensAvailable;
				In20!InspectTokenAvailability(4096);
				In20?TokensAvailable;
				In21!InspectTokenAvailability(1024);
				In21?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In23!InspectTokenAvailability(4096);
				In23?TokensAvailable;
				In24!InspectTokenAvailability(4096);
				In24?TokensAvailable;
				In25!InspectTokenAvailability(4096);
				In25?TokensAvailable;
				In26!InspectTokenAvailability(4096);
				In26?TokensAvailable;
				In27!InspectTokenAvailability(2048);
				In27?TokensAvailable;
				In28!InspectTokenAvailability(2048);
				In28?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(4096);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In7!InspectTokenAvailability(1024);
				In7?TokensAvailable;
				In9!InspectTokenAvailability(1024);
				In9?TokensAvailable;
				In10!InspectTokenAvailability(1024);
				In10?TokensAvailable;
				In11!InspectTokenAvailability(2048);
				In11?TokensAvailable;
				In13!InspectTokenAvailability(4096);
				In13?TokensAvailable;
				In14!InspectTokenAvailability(2048);
				In14?TokensAvailable;
				In16!InspectTokenAvailability(1024);
				In16?TokensAvailable;
				In17!InspectTokenAvailability(1024);
				In17?TokensAvailable;
				In18!InspectTokenAvailability(2048);
				In18?TokensAvailable;
				In22!InspectTokenAvailability(2048);
				In22?TokensAvailable;
				In27!InspectTokenAvailability(2048);
				In27?TokensAvailable;
				In29!InspectTokenAvailability(1024);
				In29?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In23!ReleaseRoom;
				In25!ReleaseRoom;
				In26!ReleaseRoom;
				In27!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				In25!ReleaseRoom;
				In26!ReleaseRoom;
				In27!ReleaseRoom;
				In28!ReleaseRoom;
				In29!ReleaseRoom;
				skip
			case "S3" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				In24!ReleaseRoom;
				In25!ReleaseRoom;
				In26!ReleaseRoom;
				In28!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In23!ReleaseRoom;
				In24!ReleaseRoom;
				In25!ReleaseRoom;
				In26!ReleaseRoom;
				In27!ReleaseRoom;
				In28!ReleaseRoom;
				In29!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				In25!ReleaseRoom;
				In29!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				In8!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				In24!ReleaseRoom;
				In25!ReleaseRoom;
				In29!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In13!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In19!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				In25!ReleaseRoom;
				In26!ReleaseRoom;
				In27!ReleaseRoom;
				In29!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In24!ReleaseRoom;
				In25!ReleaseRoom;
				In27!ReleaseRoom;
				In29!ReleaseRoom;
				skip
			case "S9" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In7!ReleaseRoom;
				In8!ReleaseRoom;
				In9!ReleaseRoom;
				In11!ReleaseRoom;
				In12!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In15!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In19!ReleaseRoom;
				In20!ReleaseRoom;
				In21!ReleaseRoom;
				In22!ReleaseRoom;
				In23!ReleaseRoom;
				In24!ReleaseRoom;
				In25!ReleaseRoom;
				In26!ReleaseRoom;
				In27!ReleaseRoom;
				In28!ReleaseRoom;
				In29!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In7!ReleaseRoom;
				In9!ReleaseRoom;
				In10!ReleaseRoom;
				In11!ReleaseRoom;
				In13!ReleaseRoom;
				In14!ReleaseRoom;
				In16!ReleaseRoom;
				In17!ReleaseRoom;
				In18!ReleaseRoom;
				In22!ReleaseRoom;
				In27!ReleaseRoom;
				In29!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S2" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S5" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				skip
			case "S6" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				skip
			case "S7" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				skip
			case "S9" then
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				Out2!ReserveRoom(1024);
				Out2?ReservationSuccessful;
				Out3!ReserveRoom(2048);
				Out3?ReservationSuccessful;
				Out4!ReserveRoom(1024);
				Out4?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out3!WriteTokens;
				skip
			case "S2" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S5" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				skip
			case "S6" then
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S7" then
				Out2!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S9" then
				Out2!WriteTokens;
				Out4!WriteTokens;
				skip
			case "S10" then
				Out1!WriteTokens;
				Out2!WriteTokens;
				Out3!WriteTokens;
				Out4!WriteTokens;
				skip
		od

@SuppressWarnings("unused")
process class Task33 extends Task
ports
	In1
	In2
	In3
	In4
	In5
	In6
	Out1
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	In5!InspectTokenAvailability(Integer),
	In5!MappedTo(String),
	In5!ReleaseRoom(),
	In5?TokensAvailable(),
	In6!InspectTokenAvailability(Integer),
	In6!MappedTo(String),
	In6!ReleaseRoom(),
	In6?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			In5!MappedTo(MapTo)
		and
			In6!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S2" then
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				skip
			case "S4" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				skip
			case "S5" then
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S6" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				skip
			case "S7" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(1024);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(1024);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(2048);
				In4?TokensAvailable;
				In5!InspectTokenAvailability(1024);
				In5?TokensAvailable;
				In6!InspectTokenAvailability(4096);
				In6?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S2" then
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S4" then
				In3!ReleaseRoom;
				skip
			case "S5" then
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S6" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S7" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				In6!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In5!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				In5!ReleaseRoom;
				In6!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
			case "S4" then
				skip
			case "S5" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
			case "S6" then
				skip
			case "S7" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(1024);
				Out1?ReservationSuccessful;
				skip
			case "S9" then
				skip
			case "S10" then
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				skip
			case "S4" then
				skip
			case "S5" then
				Out1!WriteTokens;
				skip
			case "S6" then
				skip
			case "S7" then
				Out1!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				skip
			case "S9" then
				skip
			case "S10" then
				skip
		od

@SuppressWarnings("unused")
process class Task34 extends Task
ports
	In1
	In2
	In3
	In4
	Out1
messages
	Control!MappedTo(String),
	In1!InspectTokenAvailability(Integer),
	In1!MappedTo(String),
	In1!ReleaseRoom(),
	In1?TokensAvailable(),
	In2!InspectTokenAvailability(Integer),
	In2!MappedTo(String),
	In2!ReleaseRoom(),
	In2?TokensAvailable(),
	In3!InspectTokenAvailability(Integer),
	In3!MappedTo(String),
	In3!ReleaseRoom(),
	In3?TokensAvailable(),
	In4!InspectTokenAvailability(Integer),
	In4!MappedTo(String),
	In4!ReleaseRoom(),
	In4?TokensAvailable(),
	Out1!MappedTo(String),
	Out1!ReserveRoom(Integer),
	Out1!WriteTokens(),
	Out1?ReservationSuccessful(),
variables

init
	Initialise()()
methods
	NotifyBuffersAboutMapping()()
		par
			In1!MappedTo(MapTo)
		and
			In2!MappedTo(MapTo)
		and
			In3!MappedTo(MapTo)
		and
			In4!MappedTo(MapTo)
		and
			Out1!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
		rap

	CheckTokenAvailabilityForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				skip
			case "S2" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S3" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S4" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S5" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				skip
			case "S6" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				skip
			case "S7" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S8" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
			case "S9" then
				In1!InspectTokenAvailability(2048);
				In1?TokensAvailable;
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				skip
			case "S10" then
				In2!InspectTokenAvailability(2048);
				In2?TokensAvailable;
				In3!InspectTokenAvailability(4096);
				In3?TokensAvailable;
				In4!InspectTokenAvailability(4096);
				In4?TokensAvailable;
				skip
		od

	ReleaseSpaceForReads(Scenario : String)()
		switch Scenario do
			case "S1" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S2" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S3" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S4" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S5" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				skip
			case "S6" then
				In2!ReleaseRoom;
				skip
			case "S7" then
				In2!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S8" then
				In1!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
			case "S9" then
				In1!ReleaseRoom;
				In2!ReleaseRoom;
				skip
			case "S10" then
				In2!ReleaseRoom;
				In3!ReleaseRoom;
				In4!ReleaseRoom;
				skip
		od

	ReserveSpaceForWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S2" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S3" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S4" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S5" then
				skip
			case "S6" then
				skip
			case "S7" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S8" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
			case "S9" then
				skip
			case "S10" then
				Out1!ReserveRoom(4096);
				Out1?ReservationSuccessful;
				skip
		od

	PerformWrites(Scenario : String)()
		switch Scenario do
			case "S1" then
				Out1!WriteTokens;
				skip
			case "S2" then
				Out1!WriteTokens;
				skip
			case "S3" then
				Out1!WriteTokens;
				skip
			case "S4" then
				Out1!WriteTokens;
				skip
			case "S5" then
				skip
			case "S6" then
				skip
			case "S7" then
				Out1!WriteTokens;
				skip
			case "S8" then
				Out1!WriteTokens;
				skip
			case "S9" then
				skip
			case "S10" then
				Out1!WriteTokens;
				skip
		od
