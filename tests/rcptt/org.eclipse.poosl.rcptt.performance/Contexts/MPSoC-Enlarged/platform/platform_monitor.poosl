data class PlatformStatus extends Object
variables
	Monitors : Array,
	Accuracies : Array
methods
	getNumberOfMonitors : Integer
		return Accuracies size

	register(ID : Integer, Accurate : Boolean) : PlatformStatus
		Accuracies putAt(ID, Accurate);
		return self

	@Init
	init : PlatformStatus
		Accuracies := new(Array);
		Monitors := new(Array);
		return self

	printString : String | i : Integer, PrintOut : String |
		PrintOut := "Accuracy Status for Monitors at the following Components" cr cr;
		i := 1;
		while i <= Monitors size do
			PrintOut := PrintOut + Monitors at(i) printString + ": " + Accuracies at(i) printString cr;
			i := i + 1
		od;
		return PrintOut

	getMonitor(ID : Integer) : String
		return Monitors at(ID)

	accurate : Boolean | i : Integer, Accurate : Boolean |
		Accurate := true;
		i := 1;
		while Accurate & (i <= Accuracies size) do
			Accurate := Accurate & Accuracies at(i);
			i := i + 1
		od;
		return Accurate

	addMonitor(Name : String) : PlatformStatus | i : Integer |
		i := Accuracies size + 1;
		Monitors resize(i);
		Accuracies resize(i);
		Monitors putAt(i, Name);
		Accuracies putAt(i, false);
		return self

process class PlatformMonitor()
ports
	SimulationController,
	Monitor
messages
	Monitor!Status(String),
	Monitor!StopSimulation(),
	Monitor?AccuracyStatus(Boolean),
	Monitor?InitialiseMonitor(String),
	SimulationController!PlatformAccuracyStatus(Boolean),
	SimulationController?PlatformStatus(),
	SimulationController?StopSimulation()
variables
	Status : PlatformStatus
init
	Initialise()()
methods
	Initialise()() | Monitor : String |
		Status := new(PlatformStatus) init;
		abort
			while true do
				Monitor?InitialiseMonitor(Monitor) {Status addMonitor(Monitor)}
			od
		with delay (2.0e-12);
		abort
			CheckAccuracyStatus()()
		with SimulationController?StopSimulation;
		while true do
			Monitor!StopSimulation
		od

	CheckAccuracyStatus()() | MonitorID : Integer, Accurate : Boolean |
		SimulationController?PlatformStatus;
		MonitorID := 1;
		while MonitorID <= Status getNumberOfMonitors() do
			Monitor!Status(Status getMonitor(MonitorID));
			Monitor?AccuracyStatus(Accurate) {Status register(MonitorID, Accurate)};
			MonitorID := MonitorID + 1
		od;
		SimulationController!PlatformAccuracyStatus(Status accurate);
		CheckAccuracyStatus()()