//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.11.16 at 11:04:04 AM CET 
//


package nl.esi.poosl.generatedxmlclasses;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for t_process_class complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="t_process_class">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="interface" type="{uri:poosl}t_interface"/>
 *         &lt;element name="super_class" type="{uri:poosl}t_poosl_type" minOccurs="0"/>
 *         &lt;element name="instantiation_parameter" type="{uri:poosl}t_typed_variable" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="instance_variable" type="{uri:poosl}t_typed_variable" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="initial_method_call" type="{uri:poosl}t_initial_method_call"/>
 *         &lt;element name="process_method" type="{uri:poosl}t_process_method" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="annotation" type="{uri:poosl}t_process_class_annotation" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{uri:poosl}t_poosl_type" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "t_process_class", propOrder = {
    "_interface",
    "superClass",
    "instantiationParameter",
    "instanceVariable",
    "initialMethodCall",
    "processMethod",
    "annotation"
})
public class TProcessClass {

    @XmlElement(name = "interface", required = true)
    protected TInterface _interface;
    @XmlElement(name = "super_class")
    protected String superClass;
    @XmlElement(name = "instantiation_parameter")
    protected List<TTypedVariable> instantiationParameter;
    @XmlElement(name = "instance_variable")
    protected List<TTypedVariable> instanceVariable;
    @XmlElement(name = "initial_method_call", required = true)
    protected TInitialMethodCall initialMethodCall;
    @XmlElement(name = "process_method")
    protected List<TProcessMethod> processMethod;
    protected TProcessClassAnnotation annotation;
    @XmlAttribute(name = "name", required = true)
    protected String name;

    /**
     * Gets the value of the interface property.
     * 
     * @return
     *     possible object is
     *     {@link TInterface }
     *     
     */
    public TInterface getInterface() {
        return _interface;
    }

    /**
     * Sets the value of the interface property.
     * 
     * @param value
     *     allowed object is
     *     {@link TInterface }
     *     
     */
    public void setInterface(TInterface value) {
        this._interface = value;
    }

    /**
     * Gets the value of the superClass property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSuperClass() {
        return superClass;
    }

    /**
     * Sets the value of the superClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSuperClass(String value) {
        this.superClass = value;
    }

    /**
     * Gets the value of the instantiationParameter property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the instantiationParameter property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInstantiationParameter().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TTypedVariable }
     * 
     * 
     */
    public List<TTypedVariable> getInstantiationParameter() {
        if (instantiationParameter == null) {
            instantiationParameter = new ArrayList<TTypedVariable>();
        }
        return this.instantiationParameter;
    }

    /**
     * Gets the value of the instanceVariable property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the instanceVariable property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInstanceVariable().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TTypedVariable }
     * 
     * 
     */
    public List<TTypedVariable> getInstanceVariable() {
        if (instanceVariable == null) {
            instanceVariable = new ArrayList<TTypedVariable>();
        }
        return this.instanceVariable;
    }

    /**
     * Gets the value of the initialMethodCall property.
     * 
     * @return
     *     possible object is
     *     {@link TInitialMethodCall }
     *     
     */
    public TInitialMethodCall getInitialMethodCall() {
        return initialMethodCall;
    }

    /**
     * Sets the value of the initialMethodCall property.
     * 
     * @param value
     *     allowed object is
     *     {@link TInitialMethodCall }
     *     
     */
    public void setInitialMethodCall(TInitialMethodCall value) {
        this.initialMethodCall = value;
    }

    /**
     * Gets the value of the processMethod property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the processMethod property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProcessMethod().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TProcessMethod }
     * 
     * 
     */
    public List<TProcessMethod> getProcessMethod() {
        if (processMethod == null) {
            processMethod = new ArrayList<TProcessMethod>();
        }
        return this.processMethod;
    }

    /**
     * Gets the value of the annotation property.
     * 
     * @return
     *     possible object is
     *     {@link TProcessClassAnnotation }
     *     
     */
    public TProcessClassAnnotation getAnnotation() {
        return annotation;
    }

    /**
     * Sets the value of the annotation property.
     * 
     * @param value
     *     allowed object is
     *     {@link TProcessClassAnnotation }
     *     
     */
    public void setAnnotation(TProcessClassAnnotation value) {
        this.annotation = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

}
